# С помощью использования **лямбд, filter, map, zip, enumerate, list comprehension

# Вывести числа которые больше предыдущего

# До
# lst = [2, 44, 77, 1, 1 ,9, 53, 2, 22, 44, 11]
# lst = [lst[i] for i in range(1, len(lst)) if lst[i] > lst[i-1]]
# print(lst)

# После
# print('Введите числа через пробел: ')
# a=list(map(int,input().split()))
# print(' '.join(map(lambda p : str(p[1]), filter(lambda p : p[1] > p[0], zip(a[:-1],a[1:])))))

# Вывести элементы у которых нет повторений

# До
# lst = [2, 44, 77, 1, 1 ,9, 53, 2, 22, 44, 11]
# lst = [el for el in lst if lst.count(el) == 1]
# print(lst)

# После
# lst = [2, 44, 77, 1, 1 ,9, 53, 2, 22, 44, 11]
# lst = [i for n, i in enumerate(lst) if i not in lst[:n]]
# print(lst)

"""
Задание 1.
Поработайте с переменными, создайте несколько,
введите на экран, запросите у пользователя несколько номеров и
строки и сохраняйте переменные, выведите на экран.
Пример:
Ведите свое имя: Василий
Введите ваш пароль: vas
Введите ваш возраст: 45
Ваши данные для входа в аккаунт: имя - Василий, пароль - vas, возраст - 45
"""
# name = input('Введите свое имя: ')
# password = input('Введите ваш пароль: ')
# age = int(input('Введите ваш возраст: '))
# print(f'Ваши данные для входа в аккаунт: {name}, {password}, {age}')
# print(f'Ваши данные для входа в аккаунт: Имя - {name}, Пароль - {password}, Возраст - {age}.')

"""
Задание 2.
Пользователь вводит время в секундах.
Переведите время в часы, минуты и секунды и выведите в формате чч:мм:сс.
Используйте форматирование строк.
Пример:
Введите время в секундах: 3600
Время в формате ч:м:с - 1.0 : 60.0 : 3600
"""

# time_seconds = float(input('Введите время в секундах: '))
# time_minutes = time_seconds / 60
# time_hour = time_minutes / 60
# print(f'Время в формате ч:м:с - {time_hour} : {time_minutes} : {time_seconds}')

"""
Задание 3.
Узнайте у пользователя целое положительное число n.
Найдите сумму чисел n + nn + nnn.
Пример:
Введите число n: 3
n + nn + nnn = 369
"""

# number = input('Введите число n: ')
# number_one = number + number
# number_two = number + number + number
# number_three = int(number) + int(number_one) + int(number_two)
# print(number_three)

"""
Задание 4.
Пользователь вводит целое положительное число.
Найдите самую большую цифру в числе.
Для решения используйте цикл while и только арифметические операции.
Не используйте взятие по индексу.
Пример:
Ведите целое положительное число: 123456789
Самая большая цифра в числе: 9
"""

# number = int(input('Введите целое положительное число: '))
# result = -1
# while number > 10:
#     del_ost = number % 10
#     number //= 10
#     if del_ost > result:
#         result = del_ost
# print(f'Самая большая цифра в числе: {result}')

"""
Задание 5.
Запросите у пользователя значения выручки и издержек фирмы.
Определите, с каким финансовым результатом работает фирма
(прибыль — выручка больше издержек, или убыток — издержки больше выручки).
Выведите соответствующее сообщение. Если фирма отработала с прибылью,
вычислите рентабельность выручки (соотношение прибыли к выручке).
Далее запросите численность сотрудников фирмы и определите
прибыль фирмы в расчете на одного сотрудника.
Пример:
Введите выручку фирмы: 1000
Введите издержки фирмы: 500
Финансовый результат - прибыль. Ее величина: 500
Значит вычисляем рентабельность выручки (соотношение прибыли к выручке)
Рентабельность выручки = 0.5
Введите численность сотрудников фирмы: 10
Прибыль фирмы в расчете на одного сотрудника = 50.0
"""

# revenue = int(input('Введите выручку фирмы: '))
# costs = int(input('Введите издержки фирмы: '))
# finans_result = revenue - costs
# print(f'Финансовый результат - прибыль. Ее величина: {finans_result}')
# print('Значит вычисляем рентабельность выручки (соотношение прибыли к выручке)')
# return_revenue = finans_result / 100
# print(f'Рентабельность выручки = {return_revenue}')
# number_employees = int(input('Введите численность сотрудников фирмы: '))
# profit_per_employee = return_revenue * number_employees
# print(f'Прибыль фирмы в расчете на одного сотрудника = {profit_per_employee}')

"""
Задание 6.
Спортсмен занимается ежедневными пробежками.
В первый день его результат составил a километров.
Каждый день спортсмен увеличивал результат на 10 % относительно предыдущего.
Требуется определить номер дня,
на который результат спортсмена составит не менее b километров.
Программа должна принимать значения параметров a и b
 и выводить одно натуральное число — номер дня.
Например: a = 2, b = 3.
Результат:
1-й день: 2
2-й день: 2,2
3-й день: 2,42
4-й день: 2,66
5-й день: 2,93
6-й день: 3,22
Ответ: на 6-й день спортсмен достиг результата — не менее 3 км.
"""

# a = int(input("Введите расстояние первой пробежки в км: "))
# b = int(input("Введите целевой результат в км: "))

# count = 1

# while a < b:
#     a *= 1.1
#     count += 1

# print(f"На {count}-й день спортсмен достиг результата — не менее {b} км")
